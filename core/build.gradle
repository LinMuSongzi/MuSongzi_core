apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    androidExtensions {
        experimental = true
    }
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
//        noinspection DataBindingWithoutKapt
        enabled = true
    }
}

dependencies {
//    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    api 'org.greenrobot:eventbus:3.0.0'
    api 'androidx.core:core-ktx:1.1.0'
    api "androidx.appcompat:appcompat:$rootProject.ext.lib.appcompat"
    api 'androidx.legacy:legacy-support-v4:1.0.0'
    api 'androidx.lifecycle:lifecycle-service:2.4.0'
    api 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    api 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    api 'androidx.viewpager2:viewpager2:1.1.0-alpha01'
    api 'androidx.cardview:cardview:1.0.0'
    api 'androidx.constraintlayout:constraintlayout:2.0.4'
    api 'com.google.android.material:material:1.2.1'
    api 'androidx.appcompat:appcompat:1.3.0'
    api 'androidx.recyclerview:recyclerview:1.0.0'
    api 'com.github.bumptech.glide:glide:4.11.0'
    api 'androidx.lifecycle:lifecycle-livedata-ktx:2.1.0'
    api 'io.reactivex.rxjava3:rxjava:3.0.4'
    api 'io.reactivex.rxjava3:rxandroid:3.0.0'
    api 'com.gyf.immersionbar:immersionbar:3.0.0'
    api 'com.scwang.smart:refresh-layout-kernel:2.0.3'      //核心必须依赖
    api 'com.scwang.smart:refresh-header-classics:2.0.3'    //经典刷新头
    api 'com.scwang.smart:refresh-header-radar:2.0.3'       //雷达刷新头
    api 'com.scwang.smart:refresh-header-falsify:2.0.3'     //虚拟刷新头
    api 'com.scwang.smart:refresh-header-material:2.0.3'    //谷歌刷新头
    api 'com.scwang.smart:refresh-header-two-level:2.0.3'   //二级刷新头
    api 'com.scwang.smart:refresh-footer-ball:2.0.3'        //球脉冲加载
    api 'com.scwang.smart:refresh-footer-classics:2.0.3'    //经典加载

    // retrofit 和 OKHttp
    api 'com.squareup.retrofit2:converter-gson:2.0.2'
    api 'com.squareup.retrofit2:retrofit:2.9.0'
    api 'com.squareup.retrofit2:adapter-rxjava3:2.9.0'
    api 'com.squareup.okhttp3:logging-interceptor:3.8.0'
    api 'com.squareup.okhttp:okhttp:2.7.2'
    api 'com.squareup.okhttp:okhttp-apache:2.7.2'
    api 'com.squareup.okio:okio:1.17.2'
    api 'com.google.code.gson:gson:2.8.6'

    //分包
    def multidex_version = "2.0.1"
    api "androidx.multidex:multidex:$multidex_version"
    api 'com.trello.rxlifecycle4:rxlifecycle:4.0.2'


// If you want to bind to Android-specific lifecycles
    api 'com.trello.rxlifecycle4:rxlifecycle-android:4.0.2'

// If you want pre-written Activities and Fragments you can subclass as providers
    api 'com.trello.rxlifecycle4:rxlifecycle-components:4.0.2'

// If you want pre-written support preference Fragments you can subclass as providers
    api 'com.trello.rxlifecycle4:rxlifecycle-components-preference:4.0.2'

// If you want to use Android Lifecycle for providers
    api 'com.trello.rxlifecycle4:rxlifecycle-android-lifecycle:4.0.2'

// If you want to use Kotlin syntax
    api 'com.trello.rxlifecycle4:rxlifecycle-kotlin:4.0.2'

// If you want to use Kotlin syntax with Android Lifecycle
    api 'com.trello.rxlifecycle4:rxlifecycle-android-lifecycle-kotlin:4.0.2'

    api "androidx.startup:startup-runtime:1.0.0-alpha01"

}